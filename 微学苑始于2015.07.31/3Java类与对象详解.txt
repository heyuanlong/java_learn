创建对象
对象是类的一个实例，创建对象的过程也叫类的实例化。对象是以类为模板来创建的。

在Java中，使用new关键字来创建对象，一般有以下三个步骤：
声明：声明一个对象，包括对象名称和对象类型。
实例化：使用关键字new来创建一个对象。
初始化：使用new创建对象时，会调用构造方法初始化对象。

例如：
Dog myDog;  // 声明一个对象
myDog = new Dog("花花", 3);  // 实例化


访问成员变量和方法
通过已创建的对象来访问成员变量和成员方法，例如：
// 实例化
Dog myDog = new Dog("花花", 3);
// 通过点号访问成员变量
myDog.name;
// 通过点号访问成员方法
myDog.bark();




Java支持四种不同的访问权限：（与C++不同）
修饰符	说明
public	共有的，对所有类可见。
protected	受保护的，对同一包内的类和所有子类可见。
private	私有的，在同一类内可见。
默认的	在同一包内可见。默认不使用任何修饰符。


在Java中，变量的作用域分为四个级别：类级、对象实例级、方法级、块级。
public class Demo{
    public static String name = "微学苑";  // 类级变量
    public int i; // 对象实例级变量

    // 属性块，在类初始化属性时候运行
    {
        int j = 2;// 块级变量
    }

    public void test1() {
        int j = 3;  // 方法级变量
        if(j == 3) {
            int k = 5;  // 块级变量
        }
        // 这里不能访问块级变量，块级变量只能在块内部访问
        System.out.println("name=" + name + ", i=" + i + ", j=" + j);
    }

    public static void main(String[] args) {
        // 不创建对象，直接通过类名访问类级变量
        System.out.println(Demo.name);
       
        // 创建对象并访问它的方法
        Demo t = new Demo();
        t.test1();
    }
}



this 关键字用来表示当前对象本身
使用this区分同名变量
成员变量与方法内部的变量重名时，希望在方法内部调用成员变量，怎么办呢？这时候只能使用this

匿名对象就是没有名字的对象。如果对象只使用一次，就可以作为匿名对象，代码中 new B(this).print(); 等价于 ( new B(this) ).print();，先通过 new B(this) 创建一个没有名字的对象，再调用它的方法。



声明为final的方法不能被重载。
声明为static的方法不能被重载，但是能够被再次声明。






